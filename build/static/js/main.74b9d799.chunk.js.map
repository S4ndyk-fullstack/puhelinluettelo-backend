{"version":3,"sources":["personService.js","index.js"],"names":["url","axios","get","then","res","data","person","post","id","delete","newperson","put","Form","addOrUpdate","newName","setNewName","newNumber","setNewNumber","onSubmit","text","value","set","type","Input","onChange","event","target","Numbers","removePerson","persons","search","filtered","filter","name","toLowerCase","includes","map","key","Number","number","onClick","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Error","Header","title","ReactDOM","render","props","useState","setPersons","setSearch","notification","setNotification","error","setError","useEffect","personService","addPerson","newPerson","addedPerson","concat","setTimeout","catch","err","updatePerson","returnedPerson","nextPerson","preventDefault","foundPerson","find","window","confirm","randomId","Math","floor","random","document","getElementById"],"mappings":"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","file":"static/js/main.74b9d799.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(url)\n    return req.then(res => res.data)\n}\n\nconst create = (person) => {\n    const req = axios.post(url, person)\n    return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n    const req = axios.delete(`${url}/${id}`)\n    return req.then(res => res.data)\n}\n\nconst update = (id, newperson)  => {\n    const req = axios.put(`${url}/${id}`, newperson)\n    return req.then(res => res.data)\n}\n\nexport default {getAll, create, remove, update}","import ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react'\nimport personService from './personService'\n\nconst App = (props) => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [search, setSearch] = useState('')\n    const [notification, setNotification] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        personService.getAll()\n            .then(data => setPersons(data))\n    }, [])\n\n    const addOrUpdate = (event) => {\n        event.preventDefault()\n        const foundPerson = persons.find(person => person.name === newName)\n        if (foundPerson) {\n            if (window.confirm(`${foundPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n                return updatePerson(foundPerson)\n            }\n        }\n        const randomId = Math.floor(Math.random() * 10000)\n        const newPerson = {\n            name: newName,\n            number: newNumber,\n            id: randomId\n        }\n        return addPerson(newPerson)\n    }\n\n    const addPerson = (newPerson) => {\n        personService.create(newPerson)\n            .then(addedPerson => { \n                setPersons(persons.concat(addedPerson))\n                setNotification(`Added ${addedPerson.name}`)\n                setTimeout(() => setNotification(null), 3000)\n            })\n            .catch((err) => {\n                setError(`Failed to add ${newPerson.name} due to ${err}`)\n                setTimeout(() => setError(null), 3000)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const removePerson = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService.remove(person.id)\n                .then(() => {\n                    setPersons(persons.filter(nextPerson => nextPerson.id !== person.id))\n                    setNotification(`Removed ${person.name}`)\n                    setTimeout(() => setNotification(null), 3000)\n                })\n                .catch((err) => {\n                    setError(`Failed to remove ${person.name} due to ${err}`)\n                    setTimeout(() => setError(null), 3000)\n                })\n        }\n    }\n\n    const updatePerson = (person) => {\n        const newPerson = {\n            ...person,\n            name: newName,\n            number: newNumber\n        }\n        personService.update(person.id, newPerson)\n            .then(returnedPerson => {\n                setPersons(persons.map(nextPerson => nextPerson.id === person.id ? returnedPerson : nextPerson))\n                setNotification(`Updated ${returnedPerson.name}`)\n                setTimeout(() => setNotification(null), 3000)\n            })\n            .catch((err) => {\n                setError(`Failed to replace ${person.name} due to ${err}`)\n                setTimeout(() => setError(null), 3000)\n            })\n        setNewName('')\n        setNewNumber('')\n    }\n\n    return (\n        <div>\n            <Header title='Phonebook' />\n            <Notification message={notification} />\n            <Error message={error} />\n            <Input text='filter shown with ' value={search} set={setSearch} />\n            <Header title='Add a new' />\n            <Form\n                addOrUpdate={addOrUpdate}\n                setNewName={setNewName} newName={newName}\n                newNumber={newNumber} setNewNumber={setNewNumber}\n            />\n            <Header title='Numbers' />\n            <Numbers persons={persons} search={search} removePerson={removePerson} />\n        </div>\n    )\n}\n\nconst Form = ({ addOrUpdate, newName, setNewName, newNumber, setNewNumber }) => {\n    return (\n        <div>\n            <form onSubmit={addOrUpdate}>\n                <Input text='name: ' value={newName} set={setNewName} />\n                <Input text='number: ' value={newNumber} set={setNewNumber} />\n                <button type=\"submit\">add</button>\n            </form>\n        </div>\n    )\n}\n\nconst Input = ({ text, value, set }) => {\n    return (\n        <div>\n            {text} <input value={value} onChange={event => set(event.target.value)} />\n        </div>\n    )\n}\n\nconst Numbers = ({ removePerson, persons, search }) => {\n    const filtered = persons.filter((person) => person.name.toLowerCase().includes(search))\n    return (\n        <ul>\n            {filtered.map(person => <Number key={person.id} person={person} removePerson={removePerson} />)}\n        </ul>\n    )\n}\n\nconst Number = ({ person, removePerson }) => {\n    return (\n        <li>\n            {person.name} {person.number}\n            <button onClick={() => removePerson(person)}>remove</button>\n        </li>\n    )\n}\n\nconst Notification = ({ message }) => {\n    const style = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null) return null\n    return (\n        <div style={style}>\n            {message}\n        </div>\n    )\n}\n\nconst Error = ({ message }) => {\n    const style = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null) return null\n    return (\n        <div style={style}>\n            {message}\n        </div>\n    )\n}\n\n\nconst Header = ({ title }) => <h2>{title}</h2>\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}